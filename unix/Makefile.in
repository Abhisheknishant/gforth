# Generic makefile, for crosscompiling use make -f Makefile.<target>

INCLUDES   = @SWIGINCLUDES@
SWIG       = @SWIG@
TARGETS    = @SWIGMODULES@
WRAPPERS   = $(patsubst %.fs, %.fsx, $(TARGETS))
LIBRARY    = @SWIGLIBS@
HOST_OS    = $(subst -,_,@host_os@)
OPTIONS    = -forth -Dhost_os_$(HOST_OS) -no-sectioncomments -use-structs -stackcomments $(INCLUDES)
INSTALL	= /usr/bin/install -c
ARCH=
VERSION	= "`gforth --version 2>&1 | cut -f2 -d' '`"
SHELL	= /bin/sh
RMTREE	= rm -rf
prefix = 
exec_prefix = ${prefix}
libexecdir = $(package)${exec_prefix}/lib
libccdir = $(subst $(DESTDIR),,$(libexecdir)/gforth$(ARCH)/$(VERSION)/libcc-named/)
srcdir = ./unix
DESTDIR = $(PWD)
LIBTOOL = @GNU_LIBTOOL@
GCC	= @CC@
HOSTCC	= @HOSTCC@
CC	= $(HOSTCC) $(INCLUDES)

all: $(TARGETS)

wrappers: $(WRAPPERS)

build-libcc-named: $(LIBRARY) $(TARGETS)
		$(RMTREE) lib/gforth$(ARCH)/$(VERSION)/libcc-named/
		-for i in $(LIBRARY); do echo $$i:; (cd ..; ./libforth -e "also c-lib s\" `pwd`/lib/gforth$(ARCH)/$(VERSION)/libcc-named/\" >libcc-named-dir libcc-path clear-path libcc-named-dir libcc-path also-path :noname 2drop s\" $(DESTDIR)$(libccdir)\" ; is replace-rpath previous" $(srcdir)/$$i -e bye); done

libs: build-libcc-named $(LIBRARY)
	for i in $(LIBRARY); do \
	    $(LIBTOOL) --silent --mode=install $(INSTALL) lib/gforth$(ARCH)/$(VERSION)/libcc-named/libgf`basename $$i .fs`.la $(DESTDIR)$(libccdir)libgf`basename $$i .fs`.la; \
	done

# execute compiled file
%.fs: %.fsx
	./$< -gforth | ./doexec $@ > $@

# compile fsi-file
%.fsx: %-fsi.c
	$(CC) -o $@ $<

# use swig to create the fsi file
%-fsi.c: %.i
	$(SWIG) $(OPTIONS) -o $@ $(patsubst %-fsi.c, %.i, $@)

run: $(DEMO)
	gforth $(DEMO)

.PHONY: clean

clean:
	rm -f $(TARGETS)
	rm -f $(patsubst %.fs, %-fsi.c, $(TARGETS))
	rm -f $(WRAPPERS)

